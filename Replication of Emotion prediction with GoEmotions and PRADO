{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"9aHTrpANhSoC"},"outputs":[],"source":["#@title Licensed under the Apache License, Version 2.0 (the \"License\");\n","# you may not use this file except in compliance with the License.\n","# You may obtain a copy of the License at\n","#\n","# https://www.apache.org/licenses/LICENSE-2.0\n","#\n","# Unless required by applicable law or agreed to in writing, software\n","# distributed under the License is distributed on an \"AS IS\" BASIS,\n","# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","# See the License for the specific language governing permissions and\n","# limitations under the License."]},{"cell_type":"markdown","metadata":{"id":"WAnqNAzfcVu0"},"source":["# Emotion prediction with GoEmotions and PRADO\n","\n"]},{"cell_type":"markdown","metadata":{"id":"OcNoWgG7hvIs"},"source":["<table class=\"tfo-notebook-buttons\" align=\"left\">\n","  <td>\n","    <a target=\"_blank\" href=\"https://colab.research.google.com/github/tensorflow/models/blob/master/research/seq_flow_lite/demo/colab/emotion_colab.ipynb\"><img src=\"https://www.tensorflow.org/images/colab_logo_32px.png\" />Run in Google Colab</a>\n","  </td>\n","  <td>\n","    <a target=\"_blank\" href=\"https://github.com/tensorflow/models/blob/master/research/seq_flow_lite/demo/colab/emotion_colab.ipynb\"><img src=\"https://www.tensorflow.org/images/GitHub-Mark-32px.png\" />View source on GitHub</a>\n","</table>"]},{"cell_type":"markdown","metadata":{"id":"dhekoIrWiSsv"},"source":["In this tutorial, we will work through training a neural emotion prediction model, using the tensorflow-models PIP package, and Bazel.\n","\n","This tutorial is using GoEmotions, an emotion prediction dataset, available on [TensorFlow TFDS](https://www.tensorflow.org/datasets/catalog/goemotions). We will be training a sequence projection model architecture named PRADO, available on [TensorFlow Model Garden](https://github.com/tensorflow/models/blob/master/research/seq_flow_lite/models/prado.py). Finally, we will examine an application of emotion prediction to emoji suggestions from text."]},{"cell_type":"markdown","metadata":{"id":"grmac7ZYj02a"},"source":["## Setup"]},{"cell_type":"markdown","metadata":{"id":"4aGnloeD1Mfo"},"source":["### Install Tensorflow 2.11.0"]},{"cell_type":"markdown","metadata":{"id":"MqP5qpAR1W4f"},"source":["The seq_flow_lite library has been written with the assumption that tensorflow 2.11.0 will be used.  It may be necessary to restart the runtime after installing the correct version of Tensorflow."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hzuq_GVn1nXO","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1699655114529,"user_tz":300,"elapsed":60404,"user":{"displayName":"Jiahe Feng","userId":"17566174313174837676"}},"outputId":"386d9526-6c10-4082-d8c2-baaba51d96fc"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting tensorflow==2.11.0\n","  Downloading tensorflow-2.11.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (588.3 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m588.3/588.3 MB\u001b[0m \u001b[31m3.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0) (1.4.0)\n","Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0) (1.6.3)\n","Requirement already satisfied: flatbuffers>=2.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0) (23.5.26)\n","Collecting gast<=0.4.0,>=0.2.1 (from tensorflow==2.11.0)\n","  Downloading gast-0.4.0-py3-none-any.whl (9.8 kB)\n","Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0) (0.2.0)\n","Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0) (1.59.2)\n","Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0) (3.9.0)\n","Collecting keras<2.12,>=2.11.0 (from tensorflow==2.11.0)\n","  Downloading keras-2.11.0-py2.py3-none-any.whl (1.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.7/1.7 MB\u001b[0m \u001b[31m98.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0) (16.0.6)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0) (1.23.5)\n","Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0) (3.3.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0) (23.2)\n","Collecting protobuf<3.20,>=3.9.2 (from tensorflow==2.11.0)\n","  Downloading protobuf-3.19.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.1 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.1/1.1 MB\u001b[0m \u001b[31m66.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0) (67.7.2)\n","Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0) (1.16.0)\n","Collecting tensorboard<2.12,>=2.11 (from tensorflow==2.11.0)\n","  Downloading tensorboard-2.11.2-py3-none-any.whl (6.0 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m6.0/6.0 MB\u001b[0m \u001b[31m85.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting tensorflow-estimator<2.12,>=2.11.0 (from tensorflow==2.11.0)\n","  Downloading tensorflow_estimator-2.11.0-py2.py3-none-any.whl (439 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m439.2/439.2 kB\u001b[0m \u001b[31m42.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0) (2.3.0)\n","Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0) (4.5.0)\n","Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0) (1.14.1)\n","Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.10/dist-packages (from tensorflow==2.11.0) (0.34.0)\n","Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.10/dist-packages (from astunparse>=1.6.0->tensorflow==2.11.0) (0.41.3)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.12,>=2.11->tensorflow==2.11.0) (2.17.3)\n","Collecting google-auth-oauthlib<0.5,>=0.4.1 (from tensorboard<2.12,>=2.11->tensorflow==2.11.0)\n","  Downloading google_auth_oauthlib-0.4.6-py2.py3-none-any.whl (18 kB)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.12,>=2.11->tensorflow==2.11.0) (3.5.1)\n","Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.12,>=2.11->tensorflow==2.11.0) (2.31.0)\n","Collecting tensorboard-data-server<0.7.0,>=0.6.0 (from tensorboard<2.12,>=2.11->tensorflow==2.11.0)\n","  Downloading tensorboard_data_server-0.6.1-py3-none-manylinux2010_x86_64.whl (4.9 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m4.9/4.9 MB\u001b[0m \u001b[31m85.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting tensorboard-plugin-wit>=1.6.0 (from tensorboard<2.12,>=2.11->tensorflow==2.11.0)\n","  Downloading tensorboard_plugin_wit-1.8.1-py3-none-any.whl (781 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m781.3/781.3 kB\u001b[0m \u001b[31m49.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from tensorboard<2.12,>=2.11->tensorflow==2.11.0) (3.0.1)\n","Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.12,>=2.11->tensorflow==2.11.0) (5.3.2)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.12,>=2.11->tensorflow==2.11.0) (0.3.0)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.12,>=2.11->tensorflow==2.11.0) (4.9)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.12,>=2.11->tensorflow==2.11.0) (1.3.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.12,>=2.11->tensorflow==2.11.0) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.12,>=2.11->tensorflow==2.11.0) (3.4)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.12,>=2.11->tensorflow==2.11.0) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.21.0->tensorboard<2.12,>=2.11->tensorflow==2.11.0) (2023.7.22)\n","Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.10/dist-packages (from werkzeug>=1.0.1->tensorboard<2.12,>=2.11->tensorflow==2.11.0) (2.1.3)\n","Requirement already satisfied: pyasn1<0.6.0,>=0.4.6 in /usr/local/lib/python3.10/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.12,>=2.11->tensorflow==2.11.0) (0.5.0)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard<2.12,>=2.11->tensorflow==2.11.0) (3.2.2)\n","Installing collected packages: tensorboard-plugin-wit, tensorflow-estimator, tensorboard-data-server, protobuf, keras, gast, google-auth-oauthlib, tensorboard, tensorflow\n","  Attempting uninstall: tensorflow-estimator\n","    Found existing installation: tensorflow-estimator 2.14.0\n","    Uninstalling tensorflow-estimator-2.14.0:\n","      Successfully uninstalled tensorflow-estimator-2.14.0\n","  Attempting uninstall: tensorboard-data-server\n","    Found existing installation: tensorboard-data-server 0.7.2\n","    Uninstalling tensorboard-data-server-0.7.2:\n","      Successfully uninstalled tensorboard-data-server-0.7.2\n","  Attempting uninstall: protobuf\n","    Found existing installation: protobuf 3.20.3\n","    Uninstalling protobuf-3.20.3:\n","      Successfully uninstalled protobuf-3.20.3\n","  Attempting uninstall: keras\n","    Found existing installation: keras 2.14.0\n","    Uninstalling keras-2.14.0:\n","      Successfully uninstalled keras-2.14.0\n","  Attempting uninstall: gast\n","    Found existing installation: gast 0.5.4\n","    Uninstalling gast-0.5.4:\n","      Successfully uninstalled gast-0.5.4\n","  Attempting uninstall: google-auth-oauthlib\n","    Found existing installation: google-auth-oauthlib 1.0.0\n","    Uninstalling google-auth-oauthlib-1.0.0:\n","      Successfully uninstalled google-auth-oauthlib-1.0.0\n","  Attempting uninstall: tensorboard\n","    Found existing installation: tensorboard 2.14.1\n","    Uninstalling tensorboard-2.14.1:\n","      Successfully uninstalled tensorboard-2.14.1\n","  Attempting uninstall: tensorflow\n","    Found existing installation: tensorflow 2.14.0\n","    Uninstalling tensorflow-2.14.0:\n","      Successfully uninstalled tensorflow-2.14.0\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","tensorflow-datasets 4.9.3 requires protobuf>=3.20, but you have protobuf 3.19.6 which is incompatible.\n","tensorflow-metadata 1.14.0 requires protobuf<4.21,>=3.20.3, but you have protobuf 3.19.6 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed gast-0.4.0 google-auth-oauthlib-0.4.6 keras-2.11.0 protobuf-3.19.6 tensorboard-2.11.2 tensorboard-data-server-0.6.1 tensorboard-plugin-wit-1.8.1 tensorflow-2.11.0 tensorflow-estimator-2.11.0\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["google"]}}},"metadata":{}}],"source":["!pip install tensorflow==2.11.0"]},{"cell_type":"markdown","metadata":{"id":"D_mi4NZeeB1l"},"source":["### Install the TensorFlow Datasets pip package"]},{"cell_type":"markdown","metadata":{"id":"tCk46-HdmIyD"},"source":["`tensorflow_datasets` is a set of collection of datasets that includes the GoEmotions dataset. We install it with pip."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mvO0_HcKx0_V","colab":{"base_uri":"https://localhost:8080/","height":772},"executionInfo":{"status":"ok","timestamp":1699655129225,"user_tz":300,"elapsed":14737,"user":{"displayName":"Jiahe Feng","userId":"17566174313174837676"}},"outputId":"2b717ef0-43b4-4694-c977-2cef07b1bfc7"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: tensorflow_datasets in /usr/local/lib/python3.10/dist-packages (4.9.3)\n","Requirement already satisfied: absl-py in /usr/local/lib/python3.10/dist-packages (from tensorflow_datasets) (1.4.0)\n","Requirement already satisfied: array-record in /usr/local/lib/python3.10/dist-packages (from tensorflow_datasets) (0.5.0)\n","Requirement already satisfied: click in /usr/local/lib/python3.10/dist-packages (from tensorflow_datasets) (8.1.7)\n","Requirement already satisfied: dm-tree in /usr/local/lib/python3.10/dist-packages (from tensorflow_datasets) (0.1.8)\n","Requirement already satisfied: etils[enp,epath,etree]>=0.9.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow_datasets) (1.5.2)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from tensorflow_datasets) (1.23.5)\n","Requirement already satisfied: promise in /usr/local/lib/python3.10/dist-packages (from tensorflow_datasets) (2.3)\n","Collecting protobuf>=3.20 (from tensorflow_datasets)\n","  Downloading protobuf-4.25.0-cp37-abi3-manylinux2014_x86_64.whl (294 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m294.4/294.4 kB\u001b[0m \u001b[31m6.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: psutil in /usr/local/lib/python3.10/dist-packages (from tensorflow_datasets) (5.9.5)\n","Requirement already satisfied: requests>=2.19.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow_datasets) (2.31.0)\n","Requirement already satisfied: tensorflow-metadata in /usr/local/lib/python3.10/dist-packages (from tensorflow_datasets) (1.14.0)\n","Requirement already satisfied: termcolor in /usr/local/lib/python3.10/dist-packages (from tensorflow_datasets) (2.3.0)\n","Requirement already satisfied: toml in /usr/local/lib/python3.10/dist-packages (from tensorflow_datasets) (0.10.2)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from tensorflow_datasets) (4.66.1)\n","Requirement already satisfied: wrapt in /usr/local/lib/python3.10/dist-packages (from tensorflow_datasets) (1.14.1)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from etils[enp,epath,etree]>=0.9.0->tensorflow_datasets) (2023.6.0)\n","Requirement already satisfied: importlib_resources in /usr/local/lib/python3.10/dist-packages (from etils[enp,epath,etree]>=0.9.0->tensorflow_datasets) (6.1.1)\n","Requirement already satisfied: typing_extensions in /usr/local/lib/python3.10/dist-packages (from etils[enp,epath,etree]>=0.9.0->tensorflow_datasets) (4.5.0)\n","Requirement already satisfied: zipp in /usr/local/lib/python3.10/dist-packages (from etils[enp,epath,etree]>=0.9.0->tensorflow_datasets) (3.17.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->tensorflow_datasets) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->tensorflow_datasets) (3.4)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->tensorflow_datasets) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.19.0->tensorflow_datasets) (2023.7.22)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from promise->tensorflow_datasets) (1.16.0)\n","Requirement already satisfied: googleapis-common-protos<2,>=1.52.0 in /usr/local/lib/python3.10/dist-packages (from tensorflow-metadata->tensorflow_datasets) (1.61.0)\n","  Downloading protobuf-3.20.3-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.1 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.1/1.1 MB\u001b[0m \u001b[31m37.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: protobuf\n","  Attempting uninstall: protobuf\n","    Found existing installation: protobuf 3.19.6\n","    Uninstalling protobuf-3.19.6:\n","      Successfully uninstalled protobuf-3.19.6\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","tensorflow 2.11.0 requires protobuf<3.20,>=3.9.2, but you have protobuf 3.20.3 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed protobuf-3.20.3\n"]},{"output_type":"display_data","data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["google"]}}},"metadata":{}}],"source":["!pip install tensorflow_datasets"]},{"cell_type":"markdown","metadata":{"id":"p2wqyg-7mbfV"},"source":["### Install the Sequence Projection Models package"]},{"cell_type":"markdown","metadata":{"id":"1JRZS_aSeINK"},"source":["Install Bazel: This will allow us to build custom TensorFlow ops used by the PRADO architecture."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"N00X4P229Ppm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699655147781,"user_tz":300,"elapsed":18573,"user":{"displayName":"Jiahe Feng","userId":"17566174313174837676"}},"outputId":"54648bd8-ef8c-42b3-9f74-6920217e3731"},"outputs":[{"output_type":"stream","name":"stdout","text":["Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","curl is already the newest version (7.81.0-1ubuntu1.14).\n","gnupg is already the newest version (2.2.27-3ubuntu2.1).\n","gnupg set to manually installed.\n","0 upgraded, 0 newly installed, 0 to remove and 19 not upgraded.\n","  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n","                                 Dload  Upload   Total   Spent    Left  Speed\n","  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).\n","100  4714  100  4714    0     0   7311      0 --:--:-- --:--:-- --:--:--  7319\n","OK\n","deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8\n","Hit:1 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64  InRelease\n","Get:2 https://storage.googleapis.com/bazel-apt stable InRelease [2,262 B]\n","Get:3 https://cloud.r-project.org/bin/linux/ubuntu jammy-cran40/ InRelease [3,626 B]\n","Get:4 http://security.ubuntu.com/ubuntu jammy-security InRelease [110 kB]\n","Hit:5 http://archive.ubuntu.com/ubuntu jammy InRelease\n","Get:6 http://archive.ubuntu.com/ubuntu jammy-updates InRelease [119 kB]\n","Get:7 https://storage.googleapis.com/bazel-apt stable/jdk1.8 amd64 Packages [11.2 kB]\n","Get:8 http://archive.ubuntu.com/ubuntu jammy-backports InRelease [109 kB]\n","Hit:9 https://ppa.launchpadcontent.net/c2d4u.team/c2d4u4.0+/ubuntu jammy InRelease\n","Get:10 http://archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [1,420 kB]\n","Get:11 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [1,274 kB]\n","Get:12 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [1,466 kB]\n","Hit:13 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy InRelease\n","Get:14 http://security.ubuntu.com/ubuntu jammy-security/main amd64 Packages [1,194 kB]\n","Hit:15 https://ppa.launchpadcontent.net/graphics-drivers/ppa/ubuntu jammy InRelease\n","Hit:16 https://ppa.launchpadcontent.net/ubuntugis/ppa/ubuntu jammy InRelease\n","Fetched 5,709 kB in 3s (2,145 kB/s)\n","Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","19 packages can be upgraded. Run 'apt list --upgradable' to see them.\n","\u001b[1;33mW: \u001b[0mhttps://storage.googleapis.com/bazel-apt/dists/stable/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.\u001b[0m\n","Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","Suggested packages:\n","  bash-completion\n","The following NEW packages will be installed:\n","  bazel\n","0 upgraded, 1 newly installed, 0 to remove and 19 not upgraded.\n","Need to get 48.6 MB of archives.\n","After this operation, 0 B of additional disk space will be used.\n","Get:1 https://storage.googleapis.com/bazel-apt stable/jdk1.8 amd64 bazel amd64 5.4.0 [48.6 MB]\n","Fetched 48.6 MB in 1s (50.4 MB/s)\n","debconf: unable to initialize frontend: Dialog\n","debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 78, <> line 1.)\n","debconf: falling back to frontend: Readline\n","debconf: unable to initialize frontend: Readline\n","debconf: (This frontend requires a controlling tty.)\n","debconf: falling back to frontend: Teletype\n","dpkg-preconfigure: unable to re-open stdin: \n","Selecting previously unselected package bazel.\n","(Reading database ... 120874 files and directories currently installed.)\n","Preparing to unpack .../archives/bazel_5.4.0_amd64.deb ...\n","Unpacking bazel (5.4.0) ...\n","Setting up bazel (5.4.0) ...\n"]}],"source":["!sudo apt install curl gnupg\n","!curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -\n","!echo \"deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list\n","!sudo apt update\n","!sudo apt install bazel=5.4.0"]},{"cell_type":"markdown","metadata":{"id":"9JeSDpZFelL5"},"source":["Install the library:\n","* `seq_flow_lite` includes the PRADO architecture and custom ops.\n","* We download the code from GitHub, and then build and install the TF and TFLite ops used by the model.\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mktlCYcd9iLG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699655509042,"user_tz":300,"elapsed":361268,"user":{"displayName":"Jiahe Feng","userId":"17566174313174837676"}},"outputId":"350c9bac-ce0d-421d-fc66-625e020a87b8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'models'...\n","warning: redirecting to https://github.com/tensorflow/models.git/\n","remote: Enumerating objects: 89771, done.\u001b[K\n","remote: Counting objects: 100% (3483/3483), done.\u001b[K\n","remote: Compressing objects: 100% (1872/1872), done.\u001b[K\n","remote: Total 89771 (delta 1829), reused 3175 (delta 1581), pack-reused 86288\u001b[K\n","Receiving objects: 100% (89771/89771), 606.53 MiB | 23.13 MiB/s, done.\n","Resolving deltas: 100% (63727/63727), done.\n","Processing ./models/research/seq_flow_lite\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Building wheels for collected packages: seq-flow-lite\n","  Building wheel for seq-flow-lite (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for seq-flow-lite: filename=seq_flow_lite-0.1-py3-none-any.whl size=724148 sha256=3bd466db88e1ff917296c5078e78234e72f9e278fca51c5217b40cce6a7b784a\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-mmyjfggw/wheels/2e/a6/98/d2ee8c88e80d70082ac3353e423cc2c28a29357607e031cef8\n","Successfully built seq-flow-lite\n","Installing collected packages: seq-flow-lite\n","Successfully installed seq-flow-lite-0.1\n"]}],"source":["!git clone https://www.github.com/tensorflow/models\n","!models/research/seq_flow_lite/demo/colab/setup_workspace.sh\n","!pip install models/research/seq_flow_lite\n","!rm -rf models/research/seq_flow_lite/tf_ops\n","!rm -rf models/research/seq_flow_lite/tflite_ops"]},{"cell_type":"markdown","metadata":{"id":"rP8iKa4Il4mL"},"source":["## Training an Emotion Prediction Model\n","\n","* First, we load the GoEmotions data from TFDS.\n","* Next, we prepare the PRADO model for training. We set up the model configuration, including hyperparameters and labels. We also prepare the dataset, which involves projecting the inputs from the dataset, and passing the projections to the model.  This is needed because a model training on TPU can not handle string inputs.\n","* Finally, we train and evaluate the model and produce model-level and per-label metrics."]},{"cell_type":"markdown","metadata":{"id":"YtvR40K8K0Bn"},"source":["***Start here on Runtime reset***, once the packages above are properly installed:\n","* Go to the `seq_flow_lite` directory."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ImEejssVKvxR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699655509042,"user_tz":300,"elapsed":17,"user":{"displayName":"Jiahe Feng","userId":"17566174313174837676"}},"outputId":"c1e28a77-74f9-4d35-ddfa-a7801021455f"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/models/research/seq_flow_lite\n"]}],"source":["%cd models/research/seq_flow_lite"]},{"cell_type":"markdown","metadata":{"id":"uwSPqHXAeQ6H"},"source":["* Import the Tensorflow and Tensorflow Dataset libraries."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kc4y4n80eL_b"},"outputs":[],"source":["import tensorflow as tf\n","import tensorflow_datasets as tfds"]},{"cell_type":"markdown","metadata":{"id":"j-CtG3cagPgl"},"source":["### The data: GoEmotions\n","In this tutorial, we use the [GoEmotions dataset from TFDS](https://www.tensorflow.org/datasets/catalog/goemotions).\n","\n","GoEmotions is a corpus of comments extracted from Reddit, with human annotations to 27 emotion categories or Neutral.\n","\n","*   Number of labels: 27.\n","*   Size of training dataset: 43,410.\n","*   Size of evaluation dataset: 5,427.\n","*   Maximum sequence length in training and evaluation datasets: 30.\n","\n","The emotion categories are admiration, amusement, anger, annoyance, approval, caring, confusion, curiosity, desire, disappointment, disapproval, disgust, embarrassment, excitement, fear, gratitude, grief, joy, love, nervousness, optimism, pride, realization, relief, remorse, sadness, surprise.\n"]},{"cell_type":"markdown","metadata":{"id":"Bvsn_s3S0SAt"},"source":["Load the data from TFDS:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KtTLwtEqwcR2","colab":{"base_uri":"https://localhost:8080/","height":133,"referenced_widgets":["e4d5e90552ba4c79800d41ded05a321c","530f859807974f33b02f79abcf2f1e9b","32dfaf2e2e5b4741a8ccf47406af484d","eac00c5511144ff79e3585e18a0055b0","c7169a1b40bd462392180693667d587a","82c4e5ffa50c47e5b4c0deb6461f0e2a","02cf15ae743c46b0a1d6ad17c00364d1","090d59f9688d430c8f63cd235c389616","63ab1c1d48dd4c4d882f26783f468082","6f64efe639824f718883f52af42f73cf","79ca5b1865e54d71be0d4663732eb851","eb56d3fa5fbd42c4971678fc903bac5f","757cb3863da3454c9842bf14a19b3906","625cd10ce36b4403ac9334e1868eee3e","3f6d440e4ab8413a954ee90d649150d5","5663fd030ec548db9a1092b8c9b2ecf5","2e3aefe73d4b4112aef67b81fe2f1931","fb247782c1604a34bc3e8a0b08bf15af","63784952b419462c9c88ee940a765b6a","cd8a7b86296a48348dd23c2eda6ca009","4345ddf5f3684c6f85f4ebb3a0e95949","00de7fe2724f4e30a6db4d5c50407dae","1467811838be487db27ceea8676f0983","fd3515a319374baeaeedcf269d9c8703","798304792c8c4a469737f88a18eed822","0811ef3c320c4c058fcaea20349889ff","e940c22be78e4aaea1ea5378c3203798","36e9300326854fb8881a3c4d830257a2","df91966281d04577af02936de01e82b5","0aa0b6e8ff154bc7bb5d02af0294192c","a2497d83b6194ef5bf6ba6390aa73cec","4a5d1262dd7342978b853c3237cc7bcb","ae3c46625b524ed081ed0f0bb1ce40ab","f7f5e9338af040fd98b3cef746dfe36f","b2b370fbdd4a4adba965aef82268afe5","dc1b7458bc734bd29d7a07a5ddd4b523","68869b865607433f8a64f9ea43e40779","2709732630f345109e4ab9fd60fac0bc","7ad656b2681b44f9b074cd6999c0a2b3","1f6e0ef65c574f22953d09cf58e8cd0a","7ec8e46f13314ec6a68ee0d56679a282","0d02a6ab28f24e8cac1ebd40d32d5244","5a52840352384a229e374015eacf8c16","586cabce451447abacc2a5acb07a283b","3e11d9d641d84ab88b211443048cd424","92abb539ef6c4fdf87c9e91c83c483b6","45c9e00c99654a1f86d3c5b8b015c5b4","df95ea47c13b490a9e720c281c5ead81","eed5db25c68b4ca89df6c1c24c5b0d7c","b331c1a0bbbe4619865870220314d785","24430da42ce14a6f919150fe371bd7b5","a63bae70071e43c5aecb3b859ed66485","90bf98c62f014e0883e1bf88fade898f","cbc95b7d03444bdd99f066baa3ae9b00","e57969780bde448b942096feb3d72f9a","f5958596c3d34c428dda32759d42f2dc","0c9d5b696228456d98365a2887a8405c","4091bd35705840a58722d100ed465915","99b841d048534f179908d304e994caa3","ffbd72844a5b43559e65ea950074f93d","ae0caef6ba6d4e75b580b5b2bba835ad","d197ae4e768c4509877fc1fc30f49b48","1d9484a73f0f4c9586054b069df2a9c4","f0d248c98a304adeaa114beed6b2cdb6","dffe2a585939456eb73549c332585777","8ef19c7facec442797a680d22147154c","a34be115c4d84171af2a4fafcd1fcea0","28b49136970140e48e76e01b4a582a70","03dd353a606e4ecfb63a91dd5de4be4b","24697eb4b1644d7e91c403dc1f7ee299","88ef28f82d224822a1dc1c2c37a795b0","e19fba3f34d24f8b8c68009d3206a562","ff7357aa3036471b975281a8353914ef","95238bedf9c647a6863e5d4724c71600","5d84e651904c4084962196d6698e0909","ffbcfeeaed9d41038f93b34dc7542b76","0466d1e571104ce4883e835a23729f6e","5af3b60e08764e38b2c6e0ab2ab46a0b","0af0d04404014545a21d8773d334d745","20201d4be5f646a4833252ee5afd3c0d","abb33c314dfd4b54af5e6fce6de5fb6b","66d81358d2e14cbaa4a901438f2f68bb","f2fc02c36e394ebda4074d318d9638e8","4497ad95fb7c4a92a457229944c05e33","0f75a0f10fad40a9b8074639aab28bac","1a23783d17ee41d79598f848de3f0850","71b12b37680c4c40959df33db7ae25a5","299c640813604e1bb3bf4963c01e7bb8","bd546cd4dc6449568540dabcbfbb001b","dbc766cdab3d4476a0e994bae000c9bb","e33d4d4e00784e8ba96ab4464d333eb0","899207dca1684d658dc06d9541b00eba","7b759496f91741c9a8f187f9b0cd9a8a","aa06ccda86844643a3d696dbd4883176","78cc058bab46497c9227cfaa28d15328","974cabb2fac34a0999415f2ccda87474","de21d7f7caac488491948d936a0cfa3c","7a7314ffc7e5452aa9ab41cfd87bb51e","b620bad247cc40b88283667a1c3a5a9b"]},"executionInfo":{"status":"ok","timestamp":1699655575780,"user_tz":300,"elapsed":56809,"user":{"displayName":"Jiahe Feng","userId":"17566174313174837676"}},"outputId":"3c8a030f-8f63-41e1-b248-62f87eea1ad9"},"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:absl:You use TensorFlow DType <dtype: 'bool'> in tfds.features This will soon be deprecated in favor of NumPy DTypes. In the meantime it was converted to bool.\n"]},{"output_type":"stream","name":"stdout","text":["Downloading and preparing dataset 4.19 MiB (download: 4.19 MiB, generated: 32.25 MiB, total: 36.44 MiB) to /root/tensorflow_datasets/goemotions/0.1.0...\n"]},{"output_type":"display_data","data":{"text/plain":["Dl Completed...: 0 url [00:00, ? url/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e4d5e90552ba4c79800d41ded05a321c"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Dl Size...: 0 MiB [00:00, ? MiB/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"eb56d3fa5fbd42c4971678fc903bac5f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Generating splits...:   0%|          | 0/3 [00:00<?, ? splits/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"1467811838be487db27ceea8676f0983"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Generating train examples...:   0%|          | 0/43410 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f7f5e9338af040fd98b3cef746dfe36f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Shuffling /root/tensorflow_datasets/goemotions/0.1.0.incomplete1TFGJR/goemotions-train.tfrecord*...:   0%|    …"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"3e11d9d641d84ab88b211443048cd424"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Generating validation examples...:   0%|          | 0/5426 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f5958596c3d34c428dda32759d42f2dc"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Shuffling /root/tensorflow_datasets/goemotions/0.1.0.incomplete1TFGJR/goemotions-validation.tfrecord*...:   0%…"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a34be115c4d84171af2a4fafcd1fcea0"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Generating test examples...:   0%|          | 0/5427 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5af3b60e08764e38b2c6e0ab2ab46a0b"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Shuffling /root/tensorflow_datasets/goemotions/0.1.0.incomplete1TFGJR/goemotions-test.tfrecord*...:   0%|     …"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"bd546cd4dc6449568540dabcbfbb001b"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Dataset goemotions downloaded and prepared to /root/tensorflow_datasets/goemotions/0.1.0. Subsequent calls will reuse this data.\n"]}],"source":["ds = tfds.load('goemotions', split='train')"]},{"cell_type":"markdown","metadata":{"id":"gJuu4jKet9zq"},"source":["Print 5 sample data elements from the dataset:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"y0O18rSLuDx5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699655576180,"user_tz":300,"elapsed":406,"user":{"displayName":"Jiahe Feng","userId":"17566174313174837676"}},"outputId":"679f2afb-059d-430c-93ad-88110be8f19f"},"outputs":[{"output_type":"stream","name":"stdout","text":["{'admiration': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'amusement': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'anger': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'annoyance': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'approval': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'caring': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'comment_text': <tf.Tensor: shape=(), dtype=string, numpy=b\"It's just wholesome content, from questionable sources\">, 'confusion': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'curiosity': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'desire': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'disappointment': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'disapproval': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'disgust': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'embarrassment': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'excitement': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'fear': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'gratitude': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'grief': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'joy': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'love': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'nervousness': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'neutral': <tf.Tensor: shape=(), dtype=bool, numpy=True>, 'optimism': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'pride': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'realization': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'relief': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'remorse': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'sadness': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'surprise': <tf.Tensor: shape=(), dtype=bool, numpy=False>}\n","{'admiration': <tf.Tensor: shape=(), dtype=bool, numpy=True>, 'amusement': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'anger': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'annoyance': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'approval': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'caring': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'comment_text': <tf.Tensor: shape=(), dtype=string, numpy=b'This is actually awesome.'>, 'confusion': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'curiosity': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'desire': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'disappointment': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'disapproval': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'disgust': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'embarrassment': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'excitement': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'fear': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'gratitude': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'grief': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'joy': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'love': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'nervousness': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'neutral': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'optimism': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'pride': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'realization': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'relief': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'remorse': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'sadness': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'surprise': <tf.Tensor: shape=(), dtype=bool, numpy=False>}\n","{'admiration': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'amusement': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'anger': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'annoyance': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'approval': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'caring': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'comment_text': <tf.Tensor: shape=(), dtype=string, numpy=b\"People really spend more than $10 in an app game? I mean an actual video game I can understand but that's just...sad\">, 'confusion': <tf.Tensor: shape=(), dtype=bool, numpy=True>, 'curiosity': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'desire': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'disappointment': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'disapproval': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'disgust': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'embarrassment': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'excitement': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'fear': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'gratitude': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'grief': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'joy': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'love': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'nervousness': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'neutral': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'optimism': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'pride': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'realization': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'relief': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'remorse': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'sadness': <tf.Tensor: shape=(), dtype=bool, numpy=True>, 'surprise': <tf.Tensor: shape=(), dtype=bool, numpy=False>}\n","{'admiration': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'amusement': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'anger': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'annoyance': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'approval': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'caring': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'comment_text': <tf.Tensor: shape=(), dtype=string, numpy=b'I grew up on the other side of Ama but live in Tulia now. I will have some El Burrito for you'>, 'confusion': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'curiosity': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'desire': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'disappointment': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'disapproval': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'disgust': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'embarrassment': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'excitement': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'fear': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'gratitude': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'grief': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'joy': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'love': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'nervousness': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'neutral': <tf.Tensor: shape=(), dtype=bool, numpy=True>, 'optimism': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'pride': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'realization': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'relief': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'remorse': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'sadness': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'surprise': <tf.Tensor: shape=(), dtype=bool, numpy=False>}\n","{'admiration': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'amusement': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'anger': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'annoyance': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'approval': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'caring': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'comment_text': <tf.Tensor: shape=(), dtype=string, numpy=b'What the problem? I mean, steak? Good. Doughnuts? Good!! I don\\xe2\\x80\\x99t see an issue. '>, 'confusion': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'curiosity': <tf.Tensor: shape=(), dtype=bool, numpy=True>, 'desire': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'disappointment': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'disapproval': <tf.Tensor: shape=(), dtype=bool, numpy=True>, 'disgust': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'embarrassment': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'excitement': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'fear': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'gratitude': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'grief': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'joy': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'love': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'nervousness': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'neutral': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'optimism': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'pride': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'realization': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'relief': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'remorse': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'sadness': <tf.Tensor: shape=(), dtype=bool, numpy=False>, 'surprise': <tf.Tensor: shape=(), dtype=bool, numpy=False>}\n"]}],"source":["for element in ds.take(5):\n","  print(element)"]},{"cell_type":"markdown","metadata":{"id":"UAz-tdQfuVBn"},"source":["### The model: PRADO\n","\n","We train an Emotion Prediction model, based on the [PRADO architecture](https://github.com/tensorflow/models/blob/master/research/seq_flow_lite/models/prado.py) from the [Sequence Projection Models package](https://github.com/tensorflow/models/tree/master/research/seq_flow_lite).\n","\n","PRADO projects input sequences to fixed sized features. The idea behind this approach is to build embedding-free models that minimize the model size. Instead of using an embedding table to lookup embeddings, sequence projection models compute them on the fly, resulting in space-efficient models.\n","\n","In this section, we prepare the PRADO model for training.\n","\n","This GoEmotions dataset is not set up so that it can be directly fed into the PRADO model, so below, we also handle the necessary preprocessing by providing a dataset builder."]},{"cell_type":"markdown","metadata":{"id":"e9uPSZYpgBqP"},"source":["Prepare the model configuration:\n","* Enumerate the labels expected to be found in the GoEmotions dataset.\n","* Prepare the `MODEL_CONFIG` dictionary which includes training parameters for the model. See sample configs for the PRADO model [here](https://github.com/tensorflow/models/tree/master/research/seq_flow_lite/configs)."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DkQMnTcLyFeR"},"outputs":[],"source":["LABELS = [\n","    'admiration',\n","    'amusement',\n","    'anger',\n","    'annoyance',\n","    'approval',\n","    'caring',\n","    'confusion',\n","    'curiosity',\n","    'desire',\n","    'disappointment',\n","    'disapproval',\n","    'disgust',\n","    'embarrassment',\n","    'excitement',\n","    'fear',\n","    'gratitude',\n","    'grief',\n","    'joy',\n","    'love',\n","    'nervousness',\n","    'optimism',\n","    'pride',\n","    'realization',\n","    'relief',\n","    'remorse',\n","    'sadness',\n","    'surprise',\n","    'neutral',\n","]\n","\n","# Model training parameters.\n","CONFIG = {\n","    'name': 'models.prado',\n","    'batch_size': 1024,\n","    'train_steps': 10000,\n","    'learning_rate': 0.0006,\n","    'learning_rate_decay_steps': 340,\n","    'learning_rate_decay_rate': 0.7,\n","}\n","\n","# Limits the amount of logging output produced by the training run, in order to\n","# avoid browser slowdowns.\n","CONFIG['save_checkpoints_steps'] = int(CONFIG['train_steps'] / 10)\n","\n","MODEL_CONFIG = {\n","    'labels': LABELS,\n","    'multilabel': True,\n","    'quantize': False,\n","    'max_seq_len': 128,\n","    'max_seq_len_inference': 128,\n","    'exclude_nonalphaspace_unicodes': False,\n","    'split_on_space': True,\n","    'embedding_regularizer_scale': 0.035,\n","    'embedding_size': 64,\n","    'bigram_channels': 64,\n","    'trigram_channels': 64,\n","    'feature_size': 512,\n","    'network_regularizer_scale': 0.0001,\n","    'keep_prob': 0.5,\n","    'word_novelty_bits': 0,\n","    'doc_size_levels': 0,\n","    'add_bos_tag': False,\n","    'add_eos_tag': False,\n","    'pre_logits_fc_layers': [],\n","    'text_distortion_probability': 0.0,\n","}\n","\n","CONFIG['model_config'] = MODEL_CONFIG"]},{"cell_type":"markdown","metadata":{"id":"R-pUW649gfzA"},"source":["Write a function that builds the datasets for the model.  It will load the data, handle batching, and generate projections for the input text."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"unYlUYXq119f"},"outputs":[],"source":["from layers import base_layers\n","from layers import projection_layers\n","\n","def build_dataset(mode, inspect=False):\n","  if mode == base_layers.TRAIN:\n","    split = 'train'\n","    count = None\n","  elif mode == base_layers.EVAL:\n","    split = 'test'\n","    count = 1\n","  else:\n","    raise ValueError('mode={}, must be TRAIN or EVAL'.format(mode))\n","\n","  batch_size = CONFIG['batch_size']\n","  if inspect:\n","    batch_size = 1\n","\n","  # Convert examples from their dataset format into the model format.\n","  def process_input(features):\n","    # Generate the projection for each comment_text input.  The final tensor\n","    # will have the shape [batch_size, number of tokens, feature size].\n","    # Additionally, we generate a tensor containing the number of tokens for\n","    # each comment_text (seq_length).  This is needed because the projection\n","    # tensor is a full tensor, and we are not using EOS tokens.\n","    text = features['comment_text']\n","    text = tf.reshape(text, [batch_size])\n","    projection_layer = projection_layers.ProjectionLayer(MODEL_CONFIG, mode)\n","    projection, seq_length = projection_layer(text)\n","\n","    # Convert the labels into an indicator tensor, using the LABELS indices.\n","    label = tf.stack([features[label] for label in LABELS], axis=-1)\n","    label = tf.cast(label, tf.float32)\n","    label = tf.reshape(label, [batch_size, len(LABELS)])\n","\n","    model_features = ({'projection': projection, 'sequence_length': seq_length}, label)\n","\n","    if inspect:\n","      model_features = (model_features[0], model_features[1], features)\n","\n","    return model_features\n","\n","  ds = tfds.load('goemotions', split=split)\n","  ds = ds.repeat(count=count)\n","  ds = ds.shuffle(buffer_size=batch_size * 2)\n","  ds = ds.batch(batch_size, drop_remainder=True)\n","  ds = ds.map(process_input,\n","              num_parallel_calls=tf.data.experimental.AUTOTUNE,\n","              deterministic=False)\n","  ds = ds.prefetch(buffer_size=tf.data.experimental.AUTOTUNE)\n","  return ds\n","\n","train_dataset = build_dataset(base_layers.TRAIN)\n","test_dataset = build_dataset(base_layers.EVAL)\n","inspect_dataset = build_dataset(base_layers.TRAIN, inspect=True)"]},{"cell_type":"markdown","metadata":{"id":"DQmYWg6ivCHS"},"source":["Print a batch of examples in model format.  This will consist of:\n","* the projection tensors (projection and seq_length)\n","* the label tensor (second tuple value)\n","\n","The projection tensor is a **[batch size, max_seq_length, feature_size]** floating point tensor.  The **[b, i]** vector is a feature vector of the **i**th token of the **b**th comment_text.  The rest of the tensor is zero-padded, and the\n","seq_length tensor indicates the number of features vectors for each comment_text.\n","\n","The label tensor is an indicator tensor of the set of true labels for the example."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1OyK7rjTvBjF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699655578871,"user_tz":300,"elapsed":1408,"user":{"displayName":"Jiahe Feng","userId":"17566174313174837676"}},"outputId":"44977756-b9ab-4096-e9f3-8071d411970e"},"outputs":[{"output_type":"stream","name":"stdout","text":["inputs = {'projection': <tf.Tensor: shape=(1024, 128, 512), dtype=float32, numpy=\n","array([[[ 0., -1., -1., ..., -1., -1.,  0.],\n","        [ 0.,  1., -1., ..., -1., -1.,  0.],\n","        [ 1., -1., -1., ...,  0., -1.,  0.],\n","        ...,\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.]],\n","\n","       [[ 0.,  1.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  1.,  0., ..., -1.,  0., -1.],\n","        [-1., -1.,  1., ...,  0.,  0.,  0.],\n","        ...,\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.]],\n","\n","       [[ 0.,  0.,  1., ..., -1., -1.,  0.],\n","        [ 0., -1., -1., ..., -1., -1., -1.],\n","        [-1.,  0.,  0., ...,  1., -1.,  0.],\n","        ...,\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.]],\n","\n","       ...,\n","\n","       [[ 0.,  0.,  1., ...,  0.,  0., -1.],\n","        [ 0.,  0., -1., ...,  0., -1., -1.],\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n","        ...,\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.]],\n","\n","       [[-1.,  0.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  0., -1., ..., -1.,  1.,  0.],\n","        [ 0.,  1.,  0., ...,  1.,  0.,  0.],\n","        ...,\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.]],\n","\n","       [[ 0.,  1.,  0., ...,  0.,  0.,  0.],\n","        [-1., -1.,  0., ...,  1.,  1., -1.],\n","        [ 0.,  0.,  0., ..., -1.,  1.,  0.],\n","        ...,\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.]]], dtype=float32)>, 'sequence_length': <tf.Tensor: shape=(1024,), dtype=float32, numpy=array([ 7.,  7., 13., ...,  2., 25.,  9.], dtype=float32)>}\n","labels = [[0. 0. 0. ... 0. 0. 0.]\n"," [0. 0. 0. ... 0. 0. 0.]\n"," [0. 0. 0. ... 0. 0. 1.]\n"," ...\n"," [0. 0. 0. ... 0. 0. 1.]\n"," [0. 0. 0. ... 0. 0. 0.]\n"," [0. 0. 0. ... 0. 0. 0.]]\n"]}],"source":["example = next(iter(train_dataset))\n","print(\"inputs = {}\".format(example[0]))\n","print(\"labels = {}\".format(example[1]))"]},{"cell_type":"markdown","metadata":{"id":"ytMQHT5Kd7A_"},"source":["In this version of the dataset, the original example has been added as the third element of the tuple."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"29EzRoCfI91r","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699655579080,"user_tz":300,"elapsed":213,"user":{"displayName":"Jiahe Feng","userId":"17566174313174837676"}},"outputId":"2252ddb1-6174-4ce0-a272-79a9fb28a269"},"outputs":[{"output_type":"stream","name":"stdout","text":["inputs = {'projection': <tf.Tensor: shape=(1, 128, 512), dtype=float32, numpy=\n","array([[[ 0.,  0.,  1., ..., -1., -1.,  0.],\n","        [ 0.,  1.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  0., -1., ...,  1.,  1.,  0.],\n","        ...,\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.],\n","        [ 0.,  0.,  0., ...,  0.,  0.,  0.]]], dtype=float32)>, 'sequence_length': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([7.], dtype=float32)>}\n","labels = [[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n","  0. 0. 0. 1.]]\n","original example = {'admiration': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'amusement': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'anger': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'annoyance': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'approval': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'caring': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'comment_text': <tf.Tensor: shape=(1,), dtype=string, numpy=\n","array([b\"It's just wholesome content, from questionable sources\"],\n","      dtype=object)>, 'confusion': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'curiosity': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'desire': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'disappointment': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'disapproval': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'disgust': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'embarrassment': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'excitement': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'fear': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'gratitude': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'grief': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'joy': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'love': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'nervousness': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'neutral': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([ True])>, 'optimism': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'pride': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'realization': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'relief': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'remorse': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'sadness': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>, 'surprise': <tf.Tensor: shape=(1,), dtype=bool, numpy=array([False])>}\n"]}],"source":["example = next(iter(inspect_dataset))\n","print(\"inputs = {}\".format(example[0]))\n","print(\"labels = {}\".format(example[1]))\n","print(\"original example = {}\".format(example[2]))"]},{"cell_type":"markdown","metadata":{"id":"CLDbHTIvvX11"},"source":["### Train and Evaluate"]},{"cell_type":"markdown","metadata":{"id":"QqUTa7wXsHoO"},"source":["First we define a function to build the model.  We vary the model inputs depending on task.  For training and evaluation, we'll take the projection and sequence length as inputs.  Otherwise, we'll take strings as inputs."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"erEiNX3ToLZ1"},"outputs":[],"source":["from models import prado\n","\n","def build_model(mode):\n","  # First we define our inputs.\n","  inputs = []\n","  if mode == base_layers.TRAIN or mode == base_layers.EVAL:\n","    # For TRAIN and EVAL, we'll be getting dataset examples,\n","    # so we'll get projections and sequence_lengths.\n","    projection = tf.keras.Input(\n","        shape=(MODEL_CONFIG['max_seq_len'], MODEL_CONFIG['feature_size']),\n","        name='projection',\n","        dtype='float32')\n","\n","    sequence_length = tf.keras.Input(\n","        shape=(), name='sequence_length', dtype='float32')\n","    inputs = [projection, sequence_length]\n","  else:\n","    # Otherwise, we get string inputs which we need to project.\n","    input = tf.keras.Input(shape=(), name='input', dtype='string')\n","    projection_layer = projection_layers.ProjectionLayer(MODEL_CONFIG, mode)\n","    projection, sequence_length = projection_layer(input)\n","    inputs = [input]\n","\n","  # Next we add the model layer.\n","  model_layer = prado.Encoder(MODEL_CONFIG, mode)\n","  logits = model_layer(projection, sequence_length)\n","\n","  # Finally we add an activation layer.\n","  if MODEL_CONFIG['multilabel']:\n","    activation = tf.keras.layers.Activation('sigmoid', name='predictions')\n","  else:\n","    activation = tf.keras.layers.Activation('softmax', name='predictions')\n","  predictions = activation(logits)\n","\n","  model = tf.keras.Model(\n","      inputs=inputs,\n","      outputs=[predictions])\n","\n","  return model\n"]},{"cell_type":"markdown","metadata":{"id":"caHpK9Htv40g"},"source":["Train the model:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2xM-2R38kogo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699658848516,"user_tz":300,"elapsed":3269441,"user":{"displayName":"Jiahe Feng","userId":"17566174313174837676"}},"outputId":"d2685bd1-2e16-4d9c-93bf-d0025f260885"},"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:tensorflow:From /usr/local/lib/python3.10/dist-packages/tensorflow/python/autograph/pyct/static_analysis/liveness.py:83: Analyzer.lamba_check (from tensorflow.python.autograph.pyct.static_analysis.liveness) is deprecated and will be removed after 2023-09-23.\n","Instructions for updating:\n","Lambda fuctions will be no more assumed to be used in the statement where they are used, or at least in the same block. https://github.com/tensorflow/tensorflow/issues/56089\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","1000/1000 [==============================] - 332s 316ms/step - loss: 0.6059 - val_loss: 0.5231\n","Epoch 2/10\n","1000/1000 [==============================] - 317s 317ms/step - loss: 0.4879 - val_loss: 0.4666\n","Epoch 3/10\n","1000/1000 [==============================] - 317s 317ms/step - loss: 0.4552 - val_loss: 0.4501\n","Epoch 4/10\n","1000/1000 [==============================] - 317s 317ms/step - loss: 0.4439 - val_loss: 0.4435\n","Epoch 5/10\n","1000/1000 [==============================] - 320s 320ms/step - loss: 0.4400 - val_loss: 0.4415\n","Epoch 6/10\n","1000/1000 [==============================] - 320s 320ms/step - loss: 0.4385 - val_loss: 0.4402\n","Epoch 7/10\n","1000/1000 [==============================] - 319s 319ms/step - loss: 0.4380 - val_loss: 0.4399\n","Epoch 8/10\n","1000/1000 [==============================] - 327s 327ms/step - loss: 0.4379 - val_loss: 0.4401\n","Epoch 9/10\n","1000/1000 [==============================] - 320s 320ms/step - loss: 0.4377 - val_loss: 0.4405\n","Epoch 10/10\n","1000/1000 [==============================] - 329s 330ms/step - loss: 0.4378 - val_loss: 0.4416\n"]}],"source":["# Remove any previous training data.\n","!rm -rf model\n","\n","model = build_model(base_layers.TRAIN)\n","\n","# Create the optimizer.\n","learning_rate = tf.keras.optimizers.schedules.ExponentialDecay(\n","    initial_learning_rate=CONFIG['learning_rate'],\n","    decay_rate=CONFIG['learning_rate_decay_rate'],\n","    decay_steps=CONFIG['learning_rate_decay_steps'],\n","    staircase=True)\n","\n","optimizer = tf.keras.optimizers.Adam(learning_rate=learning_rate)\n","\n","# Define the loss function.\n","loss = tf.keras.losses.BinaryCrossentropy(from_logits=False)\n","\n","model.compile(optimizer=optimizer, loss=loss)\n","\n","epochs = int(CONFIG['train_steps'] / CONFIG['save_checkpoints_steps'])\n","model.fit(\n","    x=train_dataset,\n","    epochs=epochs,\n","    validation_data=test_dataset,\n","    steps_per_epoch=CONFIG['save_checkpoints_steps'])\n","\n","model.save_weights('model/model_checkpoint')"]},{"cell_type":"markdown","metadata":{"id":"0hdbXBs0g3oX"},"source":["Load a training checkpoint and evaluate:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A1qc9GNtF3s5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699658853055,"user_tz":300,"elapsed":4542,"user":{"displayName":"Jiahe Feng","userId":"17566174313174837676"}},"outputId":"7e039797-4f9b-40ba-a4f0-c2c0aca3d4a3"},"outputs":[{"output_type":"stream","name":"stdout","text":["5/5 [==============================] - 4s 190ms/step - loss: 0.0000e+00 - precision@0.5/admiration: 0.5009 - recall@0.5/admiration: 0.5886 - precision@0.5/amusement: 0.7655 - recall@0.5/amusement: 0.6811 - precision@0.5/anger: 0.4490 - recall@0.5/anger: 0.3511 - precision@0.5/annoyance: 0.1852 - recall@0.5/annoyance: 0.0493 - precision@0.5/approval: 0.7143 - recall@0.5/approval: 0.0442 - precision@0.5/caring: 0.0833 - recall@0.5/caring: 0.0081 - precision@0.5/confusion: 0.2411 - recall@0.5/confusion: 0.1849 - precision@0.5/curiosity: 0.3092 - recall@0.5/curiosity: 0.2989 - precision@0.5/desire: 0.4872 - recall@0.5/desire: 0.2500 - precision@0.5/disappointment: 0.0000e+00 - recall@0.5/disappointment: 0.0000e+00 - precision@0.5/disapproval: 0.4074 - recall@0.5/disapproval: 0.0873 - precision@0.5/disgust: 0.0000e+00 - recall@0.5/disgust: 0.0000e+00 - precision@0.5/embarrassment: 0.0000e+00 - recall@0.5/embarrassment: 0.0000e+00 - precision@0.5/excitement: 0.0588 - recall@0.5/excitement: 0.0103 - precision@0.5/fear: 0.0000e+00 - recall@0.5/fear: 0.0000e+00 - precision@0.5/gratitude: 0.9493 - recall@0.5/gratitude: 0.8413 - precision@0.5/grief: 0.0000e+00 - recall@0.5/grief: 0.0000e+00 - precision@0.5/joy: 0.5486 - recall@0.5/joy: 0.5163 - precision@0.5/love: 0.7430 - recall@0.5/love: 0.8186 - precision@0.5/nervousness: 0.0000e+00 - recall@0.5/nervousness: 0.0000e+00 - precision@0.5/optimism: 0.6667 - recall@0.5/optimism: 0.4483 - precision@0.5/pride: 0.0000e+00 - recall@0.5/pride: 0.0000e+00 - precision@0.5/realization: 0.0000e+00 - recall@0.5/realization: 0.0000e+00 - precision@0.5/relief: 0.0000e+00 - recall@0.5/relief: 0.0000e+00 - precision@0.5/remorse: 0.4576 - recall@0.5/remorse: 0.5625 - precision@0.5/sadness: 0.4433 - recall@0.5/sadness: 0.2966 - precision@0.5/surprise: 0.4359 - recall@0.5/surprise: 0.1288 - precision@0.5/neutral: 0.5721 - recall@0.5/neutral: 0.5582 - precision@0.5/all: 0.5628 - recall@0.5/all: 0.3931\n"]}],"source":["model = build_model(base_layers.EVAL)\n","\n","# Define metrics over each category.\n","metrics = []\n","for i, label in enumerate(LABELS):\n","  metric = tf.keras.metrics.Precision(\n","      thresholds=[0.5],\n","      class_id=i,\n","      name='precision@0.5/{}'.format(label))\n","  metrics.append(metric)\n","  metric = tf.keras.metrics.Recall(\n","      thresholds=[0.5],\n","      class_id=i,\n","      name='recall@0.5/{}'.format(label))\n","  metrics.append(metric)\n","\n","# Define metrics over the entire task.\n","metric = tf.keras.metrics.Precision(thresholds=[0.5], name='precision@0.5/all')\n","metrics.append(metric)\n","metric = tf.keras.metrics.Recall(thresholds=[0.5], name='recall@0.5/all')\n","metrics.append(metric)\n","\n","model.compile(metrics=metrics)\n","model.load_weights('model/model_checkpoint')\n","result = model.evaluate(x=test_dataset, return_dict=True)"]},{"cell_type":"markdown","metadata":{"id":"Namwa3enwQBc"},"source":["Print evaluation metrics for the model, as well as per emotion label:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"l420PosisfXN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699660041479,"user_tz":300,"elapsed":188,"user":{"displayName":"Jiahe Feng","userId":"17566174313174837676"}},"outputId":"f2709f62-2899-4177-ba5e-0936a1d64ef1"},"outputs":[{"output_type":"stream","name":"stdout","text":["admiration: (precision@0.5: 0.5008976459503174, recall@0.5: 0.5886076092720032)\n","amusement: (precision@0.5: 0.7654867172241211, recall@0.5: 0.6811023354530334)\n","anger: (precision@0.5: 0.44897958636283875, recall@0.5: 0.3510638177394867)\n","annoyance: (precision@0.5: 0.18518517911434174, recall@0.5: 0.04934210702776909)\n","approval: (precision@0.5: 0.7142857313156128, recall@0.5: 0.044247787445783615)\n","caring: (precision@0.5: 0.0833333358168602, recall@0.5: 0.008130080997943878)\n","confusion: (precision@0.5: 0.2410714328289032, recall@0.5: 0.18493150174617767)\n","curiosity: (precision@0.5: 0.3091602921485901, recall@0.5: 0.2988929748535156)\n","desire: (precision@0.5: 0.4871794879436493, recall@0.5: 0.25)\n","disappointment: (precision@0.5: 0.0, recall@0.5: 0.0)\n","disapproval: (precision@0.5: 0.40740740299224854, recall@0.5: 0.0873015895485878)\n","disgust: (precision@0.5: 0.0, recall@0.5: 0.0)\n","embarrassment: (precision@0.5: 0.0, recall@0.5: 0.0)\n","excitement: (precision@0.5: 0.05882352963089943, recall@0.5: 0.010309278033673763)\n","fear: (precision@0.5: 0.0, recall@0.5: 0.0)\n","gratitude: (precision@0.5: 0.9493243098258972, recall@0.5: 0.841317355632782)\n","grief: (precision@0.5: 0.0, recall@0.5: 0.0)\n","joy: (precision@0.5: 0.5486111044883728, recall@0.5: 0.516339898109436)\n","love: (precision@0.5: 0.7429718971252441, recall@0.5: 0.8185840845108032)\n","nervousness: (precision@0.5: 0.0, recall@0.5: 0.0)\n","optimism: (precision@0.5: 0.6666666865348816, recall@0.5: 0.4482758641242981)\n","pride: (precision@0.5: 0.0, recall@0.5: 0.0)\n","realization: (precision@0.5: 0.0, recall@0.5: 0.0)\n","relief: (precision@0.5: 0.0, recall@0.5: 0.0)\n","remorse: (precision@0.5: 0.4576271176338196, recall@0.5: 0.5625)\n","sadness: (precision@0.5: 0.44329896569252014, recall@0.5: 0.29655173420906067)\n","surprise: (precision@0.5: 0.43589743971824646, recall@0.5: 0.12878787517547607)\n","neutral: (precision@0.5: 0.572124183177948, recall@0.5: 0.5581947565078735)\n","all: (precision@0.5: 0.5627695322036743, recall@0.5: 0.3930722773075104)\n"]}],"source":["for label in LABELS:\n","  precision_key = 'precision@0.5/{}'.format(label)\n","  recall_key = 'recall@0.5/{}'.format(label)\n","  if precision_key in result and recall_key in result:\n","    print('{}: (precision@0.5: {}, recall@0.5: {})'.format(\n","        label, result[precision_key], result[recall_key]))\n","\n","precision_key = 'precision@0.5/all'\n","recall_key = 'recall@0.5/all'\n","if precision_key in result and recall_key in result:\n","  print('all: (precision@0.5: {}, recall@0.5: {})'.format(\n","      result[precision_key], result[recall_key]))"]},{"cell_type":"markdown","metadata":{"id":"AZSWnwTMqZ5f"},"source":["## Suggest Emojis using an Emotion Prediction model\n","\n","In this section, we apply the Emotion Prediction model trained above to suggest emojis relevant to input text.\n","\n","Refer to our [GoEmotions Model Card](https://github.com/google-research/google-research/blob/master/goemotions/goemotions_model_card.pdf) for additional uses of the model and considerations and limitations for using the GoEmotions data."]},{"cell_type":"markdown","metadata":{"id":"aybpGQV1qr8I"},"source":["Map each emotion label to a relevant emoji:\n","* Emotions are subtle and multi-faceted. In many cases, no one emoji can truely capture the full complexity of the human experience behind each emotion.\n","* For the purpose of this exercise, we will select an emoji that captures at least one facet that is conveyed by an emotion label."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lgs12b90qmSQ"},"outputs":[],"source":["EMOJI_MAP = {\n","    'admiration': '👏',\n","    'amusement': '😂',\n","    'anger': '😡',\n","    'annoyance': '😒',\n","    'approval': '👍',\n","    'caring': '🤗',\n","    'confusion': '😕',\n","    'curiosity': '🤔',\n","    'desire': '😍',\n","    'disappointment': '😞',\n","    'disapproval': '👎',\n","    'disgust': '🤮',\n","    'embarrassment': '😳',\n","    'excitement': '🤩',\n","    'fear': '😨',\n","    'gratitude': '🙏',\n","    'grief': '😢',\n","    'joy': '😃',\n","    'love': '❤️',\n","    'nervousness': '😬',\n","    'optimism': '🤞',\n","    'pride': '😌',\n","    'realization': '💡',\n","    'relief': '😅',\n","    'remorse': '',\n","    'sadness': '😞',\n","    'surprise': '😲',\n","    'neutral': '',\n","}"]},{"cell_type":"markdown","metadata":{"id":"rh_3y7OL7JG_"},"source":["Select sample inputs:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rdD6xPpn7Mjm"},"outputs":[],"source":["PREDICT_TEXT = [\n","  b'Good for you!',\n","  b'Happy birthday!',\n","  b'I love you.',\n","]"]},{"cell_type":"markdown","metadata":{"id":"vavivya6hGw0"},"source":["Run inference for the selected examples:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tJ6iyLlLo5-3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699658854327,"user_tz":300,"elapsed":1277,"user":{"displayName":"Jiahe Feng","userId":"17566174313174837676"}},"outputId":"822394fc-8ef9-4c8f-a109-c4d30860f2e5"},"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 1s 574ms/step\n","\n","b'Good for you!':\n","👏: 0.8394322991371155\n","🤗: 0.5083725452423096\n","🤞: 0.45174410939216614\n","1/1 [==============================] - 0s 73ms/step\n","\n","b'Happy birthday!':\n","😃: 0.8984213471412659\n","🤩: 0.7633844614028931\n","😲: 0.44082698225975037\n","1/1 [==============================] - 0s 53ms/step\n","\n","b'I love you.':\n","❤️: 1.0\n","😡: 0.4236791431903839\n","remorse: 0.3541020154953003\n"]}],"source":["import numpy as np\n","\n","model = build_model(base_layers.PREDICT)\n","model.load_weights('model/model_checkpoint')\n","\n","for text in PREDICT_TEXT:\n","  results = model.predict(x=[text])\n","  print('')\n","  print('{}:'.format(text))\n","  labels = np.flip(np.argsort(results[0]))\n","  for x in range(3):\n","    label = LABELS[labels[x]]\n","    label = EMOJI_MAP[label] if EMOJI_MAP[label] else label\n","    print('{}: {}'.format(label, results[0][labels[x]]))"]},{"cell_type":"code","source":["2\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hF2G8aoTVgB_","executionInfo":{"status":"ok","timestamp":1699660801873,"user_tz":300,"elapsed":205,"user":{"displayName":"Jiahe Feng","userId":"17566174313174837676"}},"outputId":"a82de465-7ffd-4fae-bd6f-1d0e7b3ea571"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["Extra: add f1 score to the printed result (credit to GPT4 for helping me with tensorflow)"],"metadata":{"id":"_Rk7fmV4un4k"}},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow.keras import backend as K\n","\n","# Assuming build_model and LABELS are defined elsewhere\n","model = build_model(base_layers.EVAL)\n","\n","# Define a custom F1 score metric\n","class F1Score(tf.keras.metrics.Metric):\n","    def __init__(self, thresholds=None, class_id=None, name=None, **kwargs):\n","        super(F1Score, self).__init__(name=name, **kwargs)\n","        self.precision = tf.keras.metrics.Precision(thresholds=thresholds, class_id=class_id)\n","        self.recall = tf.keras.metrics.Recall(thresholds=thresholds, class_id=class_id)\n","\n","    def update_state(self, y_true, y_pred, sample_weight=None):\n","        self.precision.update_state(y_true, y_pred, sample_weight)\n","        self.recall.update_state(y_true, y_pred, sample_weight)\n","\n","    def result(self):\n","        precision = self.precision.result()\n","        recall = self.recall.result()\n","        return 2 * ((precision * recall) / (precision + recall + K.epsilon()))\n","\n","    def reset_state(self):\n","        self.precision.reset_state()\n","        self.recall.reset_state()\n","\n","# Define metrics over each category and overall\n","metrics = []\n","for i, label in enumerate(LABELS):\n","    precision_metric = tf.keras.metrics.Precision(thresholds=[0.5], class_id=i, name='precision@0.5/{}'.format(label))\n","    recall_metric = tf.keras.metrics.Recall(thresholds=[0.5], class_id=i, name='recall@0.5/{}'.format(label))\n","    f1_metric = F1Score(thresholds=[0.5], class_id=i, name='f1_score@0.5/{}'.format(label))\n","    metrics.extend([precision_metric, recall_metric, f1_metric])\n","\n","# Overall precision, recall, and F1 score\n","metrics.append(tf.keras.metrics.Precision(thresholds=[0.5], name='precision@0.5/all'))\n","metrics.append(tf.keras.metrics.Recall(thresholds=[0.5], name='recall@0.5/all'))\n","metrics.append(F1Score(thresholds=[0.5], name='f1_score@0.5/all'))\n","\n","model.compile(metrics=metrics)\n","model.load_weights('model/model_checkpoint')\n","result = model.evaluate(x=test_dataset, return_dict=True)\n","\n","# Print results for each label and overall\n","for label in LABELS:\n","    precision_key = 'precision@0.5/{}'.format(label)\n","    recall_key = 'recall@0.5/{}'.format(label)\n","    f1_key = 'f1_score@0.5/{}'.format(label)\n","    if precision_key in result and recall_key in result and f1_key in result:\n","        print('{}: (precision@0.5: {}, recall@0.5: {}, f1_score@0.5: {})'.format(\n","            label, result[precision_key], result[recall_key], result[f1_key]))\n","\n","precision_key = 'precision@0.5/all'\n","recall_key = 'recall@0.5/all'\n","f1_key = 'f1_score@0.5/all'\n","if precision_key in result and recall_key in result and f1_key in result:\n","  print('all: (precision@0.5: {}, recall@0.5: {}, f1_score@0.5: {})'.format(\n","      result[precision_key], result[recall_key], result[f1_key]))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kx8GWouEumuX","executionInfo":{"status":"ok","timestamp":1699661665471,"user_tz":300,"elapsed":14478,"user":{"displayName":"Jiahe Feng","userId":"17566174313174837676"}},"outputId":"abaebdaa-60f5-4338-a8df-428c8d006f43"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:tensorflow:Detecting that an object or model or tf.train.Checkpoint is being deleted with unrestored values. See the following logs for the specific values in question. To silence these warnings, use `status.expect_partial()`. See https://www.tensorflow.org/api_docs/python/tf/train/Checkpoint#restorefor details about the status object returned by the restore function.\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._current_learning_rate\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.1\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.2\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.3\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.4\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.5\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.6\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.7\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.8\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.9\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.10\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.11\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.12\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.13\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.14\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.15\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.16\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.17\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.18\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.19\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.20\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.21\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.22\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.23\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.24\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.25\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.26\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.27\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.28\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.29\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.30\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.31\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.32\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.33\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.34\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.35\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.36\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.37\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.38\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.39\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.40\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.41\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.42\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.43\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.44\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.45\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.46\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.47\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.48\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.49\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.50\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.51\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.52\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.53\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.54\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.55\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.56\n","WARNING:tensorflow:Detecting that an object or model or tf.train.Checkpoint is being deleted with unrestored values. See the following logs for the specific values in question. To silence these warnings, use `status.expect_partial()`. See https://www.tensorflow.org/api_docs/python/tf/train/Checkpoint#restorefor details about the status object returned by the restore function.\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._iterations\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._current_learning_rate\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.1\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.2\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.3\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.4\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.5\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.6\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.7\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.8\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.9\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.10\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.11\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.12\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.13\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.14\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.15\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.16\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.17\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.18\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.19\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.20\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.21\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.22\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.23\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.24\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.25\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.26\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.27\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.28\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.29\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.30\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.31\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.32\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.33\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.34\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.35\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.36\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.37\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.38\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.39\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.40\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.41\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.42\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.43\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.44\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.45\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.46\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.47\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.48\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.49\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.50\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.51\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.52\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.53\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.54\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.55\n","WARNING:tensorflow:Value in checkpoint could not be found in the restored object: (root).optimizer._variables.56\n"]},{"output_type":"stream","name":"stdout","text":["5/5 [==============================] - 12s 264ms/step - loss: 0.0000e+00 - precision@0.5/admiration: 0.4947 - recall@0.5/admiration: 0.5840 - f1_score@0.5/admiration: 0.5356 - precision@0.5/amusement: 0.7634 - recall@0.5/amusement: 0.6923 - f1_score@0.5/amusement: 0.7261 - precision@0.5/anger: 0.4430 - recall@0.5/anger: 0.3529 - f1_score@0.5/anger: 0.3929 - precision@0.5/annoyance: 0.1875 - recall@0.5/annoyance: 0.0490 - f1_score@0.5/annoyance: 0.0777 - precision@0.5/approval: 0.7143 - recall@0.5/approval: 0.0453 - f1_score@0.5/approval: 0.0852 - precision@0.5/caring: 0.0833 - recall@0.5/caring: 0.0078 - f1_score@0.5/caring: 0.0142 - precision@0.5/confusion: 0.2500 - recall@0.5/confusion: 0.1986 - f1_score@0.5/confusion: 0.2213 - precision@0.5/curiosity: 0.3115 - recall@0.5/curiosity: 0.2989 - f1_score@0.5/curiosity: 0.3051 - precision@0.5/desire: 0.4250 - recall@0.5/desire: 0.2329 - f1_score@0.5/desire: 0.3009 - precision@0.5/disappointment: 0.0000e+00 - recall@0.5/disappointment: 0.0000e+00 - f1_score@0.5/disappointment: 0.0000e+00 - precision@0.5/disapproval: 0.4074 - recall@0.5/disapproval: 0.0863 - f1_score@0.5/disapproval: 0.1424 - precision@0.5/disgust: 0.0000e+00 - recall@0.5/disgust: 0.0000e+00 - f1_score@0.5/disgust: 0.0000e+00 - precision@0.5/embarrassment: 0.0000e+00 - recall@0.5/embarrassment: 0.0000e+00 - f1_score@0.5/embarrassment: 0.0000e+00 - precision@0.5/excitement: 0.1111 - recall@0.5/excitement: 0.0211 - f1_score@0.5/excitement: 0.0354 - precision@0.5/fear: 0.0000e+00 - recall@0.5/fear: 0.0000e+00 - f1_score@0.5/fear: 0.0000e+00 - precision@0.5/gratitude: 0.9497 - recall@0.5/gratitude: 0.8398 - f1_score@0.5/gratitude: 0.8913 - precision@0.5/grief: 0.0000e+00 - recall@0.5/grief: 0.0000e+00 - f1_score@0.5/grief: 0.0000e+00 - precision@0.5/joy: 0.5517 - recall@0.5/joy: 0.5229 - f1_score@0.5/joy: 0.5369 - precision@0.5/love: 0.7379 - recall@0.5/love: 0.8097 - f1_score@0.5/love: 0.7722 - precision@0.5/nervousness: 0.0000e+00 - recall@0.5/nervousness: 0.0000e+00 - f1_score@0.5/nervousness: 0.0000e+00 - precision@0.5/optimism: 0.6667 - recall@0.5/optimism: 0.4556 - f1_score@0.5/optimism: 0.5413 - precision@0.5/pride: 0.0000e+00 - recall@0.5/pride: 0.0000e+00 - f1_score@0.5/pride: 0.0000e+00 - precision@0.5/realization: 0.0000e+00 - recall@0.5/realization: 0.0000e+00 - f1_score@0.5/realization: 0.0000e+00 - precision@0.5/relief: 0.0000e+00 - recall@0.5/relief: 0.0000e+00 - f1_score@0.5/relief: 0.0000e+00 - precision@0.5/remorse: 0.5156 - recall@0.5/remorse: 0.6471 - f1_score@0.5/remorse: 0.5739 - precision@0.5/sadness: 0.4182 - recall@0.5/sadness: 0.3108 - f1_score@0.5/sadness: 0.3566 - precision@0.5/surprise: 0.4324 - recall@0.5/surprise: 0.1203 - f1_score@0.5/surprise: 0.1882 - precision@0.5/neutral: 0.5720 - recall@0.5/neutral: 0.5600 - f1_score@0.5/neutral: 0.5659 - precision@0.5/all: 0.5613 - recall@0.5/all: 0.3944 - f1_score@0.5/all: 0.4633\n","admiration: (precision@0.5: 0.49466192722320557, recall@0.5: 0.5840336084365845, f1_score@0.5: 0.5356454253196716)\n","amusement: (precision@0.5: 0.7633928656578064, recall@0.5: 0.692307710647583, f1_score@0.5: 0.7261145710945129)\n","anger: (precision@0.5: 0.4429530203342438, recall@0.5: 0.3529411852359772, f1_score@0.5: 0.3928571045398712)\n","annoyance: (precision@0.5: 0.1875, recall@0.5: 0.04901960864663124, f1_score@0.5: 0.07772018015384674)\n","approval: (precision@0.5: 0.7142857313156128, recall@0.5: 0.04531722143292427, f1_score@0.5: 0.08522726595401764)\n","caring: (precision@0.5: 0.0833333358168602, recall@0.5: 0.007751937955617905, f1_score@0.5: 0.014184382744133472)\n","confusion: (precision@0.5: 0.25, recall@0.5: 0.19858156144618988, f1_score@0.5: 0.22134381532669067)\n","curiosity: (precision@0.5: 0.3115384578704834, recall@0.5: 0.2988929748535156, f1_score@0.5: 0.3050846755504608)\n","desire: (precision@0.5: 0.42500001192092896, recall@0.5: 0.232876718044281, f1_score@0.5: 0.3008849322795868)\n","disappointment: (precision@0.5: 0.0, recall@0.5: 0.0, f1_score@0.5: 0.0)\n","disapproval: (precision@0.5: 0.40740740299224854, recall@0.5: 0.08627451211214066, f1_score@0.5: 0.1423947960138321)\n","disgust: (precision@0.5: 0.0, recall@0.5: 0.0, f1_score@0.5: 0.0)\n","embarrassment: (precision@0.5: 0.0, recall@0.5: 0.0, f1_score@0.5: 0.0)\n","excitement: (precision@0.5: 0.1111111119389534, recall@0.5: 0.021052632480859756, f1_score@0.5: 0.0353982038795948)\n","fear: (precision@0.5: 0.0, recall@0.5: 0.0, f1_score@0.5: 0.0)\n","gratitude: (precision@0.5: 0.9496644139289856, recall@0.5: 0.8397626280784607, f1_score@0.5: 0.8913385272026062)\n","grief: (precision@0.5: 0.0, recall@0.5: 0.0, f1_score@0.5: 0.0)\n","joy: (precision@0.5: 0.5517241358757019, recall@0.5: 0.5228758454322815, f1_score@0.5: 0.536912739276886)\n","love: (precision@0.5: 0.7379032373428345, recall@0.5: 0.8097345232963562, f1_score@0.5: 0.7721518874168396)\n","nervousness: (precision@0.5: 0.0, recall@0.5: 0.0, f1_score@0.5: 0.0)\n","optimism: (precision@0.5: 0.6666666865348816, recall@0.5: 0.4555555582046509, f1_score@0.5: 0.5412541031837463)\n","pride: (precision@0.5: 0.0, recall@0.5: 0.0, f1_score@0.5: 0.0)\n","realization: (precision@0.5: 0.0, recall@0.5: 0.0, f1_score@0.5: 0.0)\n","relief: (precision@0.5: 0.0, recall@0.5: 0.0, f1_score@0.5: 0.0)\n","remorse: (precision@0.5: 0.515625, recall@0.5: 0.6470588445663452, f1_score@0.5: 0.5739129781723022)\n","sadness: (precision@0.5: 0.41818180680274963, recall@0.5: 0.31081080436706543, f1_score@0.5: 0.35658907890319824)\n","surprise: (precision@0.5: 0.4324324429035187, recall@0.5: 0.12030075490474701, f1_score@0.5: 0.18823526799678802)\n","neutral: (precision@0.5: 0.5719512104988098, recall@0.5: 0.5600000023841858, f1_score@0.5: 0.5659124851226807)\n","all: (precision@0.5: 0.5613241195678711, recall@0.5: 0.39441096782684326, f1_score@0.5: 0.46329233050346375)\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"ndW69rTsupst"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[{"file_id":"https://github.com/tensorflow/models/blob/master/research/seq_flow_lite/demo/colab/emotion_colab.ipynb","timestamp":1699654979344}],"gpuType":"T4"},"kernelspec":{"display_name":"Python 3","name":"python3"},"widgets":{"application/vnd.jupyter.widget-state+json":{"e4d5e90552ba4c79800d41ded05a321c":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_530f859807974f33b02f79abcf2f1e9b","IPY_MODEL_32dfaf2e2e5b4741a8ccf47406af484d","IPY_MODEL_eac00c5511144ff79e3585e18a0055b0"],"layout":"IPY_MODEL_c7169a1b40bd462392180693667d587a"}},"530f859807974f33b02f79abcf2f1e9b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_82c4e5ffa50c47e5b4c0deb6461f0e2a","placeholder":"​","style":"IPY_MODEL_02cf15ae743c46b0a1d6ad17c00364d1","value":"Dl Completed...: 100%"}},"32dfaf2e2e5b4741a8ccf47406af484d":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_090d59f9688d430c8f63cd235c389616","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_63ab1c1d48dd4c4d882f26783f468082","value":1}},"eac00c5511144ff79e3585e18a0055b0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6f64efe639824f718883f52af42f73cf","placeholder":"​","style":"IPY_MODEL_79ca5b1865e54d71be0d4663732eb851","value":" 3/3 [00:02&lt;00:00,  1.36 url/s]"}},"c7169a1b40bd462392180693667d587a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"82c4e5ffa50c47e5b4c0deb6461f0e2a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"02cf15ae743c46b0a1d6ad17c00364d1":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"090d59f9688d430c8f63cd235c389616":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"63ab1c1d48dd4c4d882f26783f468082":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"6f64efe639824f718883f52af42f73cf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"79ca5b1865e54d71be0d4663732eb851":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"eb56d3fa5fbd42c4971678fc903bac5f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_757cb3863da3454c9842bf14a19b3906","IPY_MODEL_625cd10ce36b4403ac9334e1868eee3e","IPY_MODEL_3f6d440e4ab8413a954ee90d649150d5"],"layout":"IPY_MODEL_5663fd030ec548db9a1092b8c9b2ecf5"}},"757cb3863da3454c9842bf14a19b3906":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2e3aefe73d4b4112aef67b81fe2f1931","placeholder":"​","style":"IPY_MODEL_fb247782c1604a34bc3e8a0b08bf15af","value":"Dl Size...: "}},"625cd10ce36b4403ac9334e1868eee3e":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_63784952b419462c9c88ee940a765b6a","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_cd8a7b86296a48348dd23c2eda6ca009","value":1}},"3f6d440e4ab8413a954ee90d649150d5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4345ddf5f3684c6f85f4ebb3a0e95949","placeholder":"​","style":"IPY_MODEL_00de7fe2724f4e30a6db4d5c50407dae","value":" 3/? [00:02&lt;00:00,  1.67 MiB/s]"}},"5663fd030ec548db9a1092b8c9b2ecf5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2e3aefe73d4b4112aef67b81fe2f1931":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fb247782c1604a34bc3e8a0b08bf15af":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"63784952b419462c9c88ee940a765b6a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"cd8a7b86296a48348dd23c2eda6ca009":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"4345ddf5f3684c6f85f4ebb3a0e95949":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"00de7fe2724f4e30a6db4d5c50407dae":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1467811838be487db27ceea8676f0983":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_fd3515a319374baeaeedcf269d9c8703","IPY_MODEL_798304792c8c4a469737f88a18eed822","IPY_MODEL_0811ef3c320c4c058fcaea20349889ff"],"layout":"IPY_MODEL_e940c22be78e4aaea1ea5378c3203798"}},"fd3515a319374baeaeedcf269d9c8703":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_36e9300326854fb8881a3c4d830257a2","placeholder":"​","style":"IPY_MODEL_df91966281d04577af02936de01e82b5","value":"Generating splits...: 100%"}},"798304792c8c4a469737f88a18eed822":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_0aa0b6e8ff154bc7bb5d02af0294192c","max":3,"min":0,"orientation":"horizontal","style":"IPY_MODEL_a2497d83b6194ef5bf6ba6390aa73cec","value":3}},"0811ef3c320c4c058fcaea20349889ff":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4a5d1262dd7342978b853c3237cc7bcb","placeholder":"​","style":"IPY_MODEL_ae3c46625b524ed081ed0f0bb1ce40ab","value":" 3/3 [00:50&lt;00:00, 12.28s/ splits]"}},"e940c22be78e4aaea1ea5378c3203798":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"36e9300326854fb8881a3c4d830257a2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"df91966281d04577af02936de01e82b5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0aa0b6e8ff154bc7bb5d02af0294192c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a2497d83b6194ef5bf6ba6390aa73cec":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"4a5d1262dd7342978b853c3237cc7bcb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ae3c46625b524ed081ed0f0bb1ce40ab":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f7f5e9338af040fd98b3cef746dfe36f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b2b370fbdd4a4adba965aef82268afe5","IPY_MODEL_dc1b7458bc734bd29d7a07a5ddd4b523","IPY_MODEL_68869b865607433f8a64f9ea43e40779"],"layout":"IPY_MODEL_2709732630f345109e4ab9fd60fac0bc"}},"b2b370fbdd4a4adba965aef82268afe5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7ad656b2681b44f9b074cd6999c0a2b3","placeholder":"​","style":"IPY_MODEL_1f6e0ef65c574f22953d09cf58e8cd0a","value":"Generating train examples...:  98%"}},"dc1b7458bc734bd29d7a07a5ddd4b523":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_7ec8e46f13314ec6a68ee0d56679a282","max":43410,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0d02a6ab28f24e8cac1ebd40d32d5244","value":43410}},"68869b865607433f8a64f9ea43e40779":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5a52840352384a229e374015eacf8c16","placeholder":"​","style":"IPY_MODEL_586cabce451447abacc2a5acb07a283b","value":" 42477/43410 [00:44&lt;00:00, 1177.70 examples/s]"}},"2709732630f345109e4ab9fd60fac0bc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"7ad656b2681b44f9b074cd6999c0a2b3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1f6e0ef65c574f22953d09cf58e8cd0a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7ec8e46f13314ec6a68ee0d56679a282":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0d02a6ab28f24e8cac1ebd40d32d5244":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"5a52840352384a229e374015eacf8c16":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"586cabce451447abacc2a5acb07a283b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3e11d9d641d84ab88b211443048cd424":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_92abb539ef6c4fdf87c9e91c83c483b6","IPY_MODEL_45c9e00c99654a1f86d3c5b8b015c5b4","IPY_MODEL_df95ea47c13b490a9e720c281c5ead81"],"layout":"IPY_MODEL_eed5db25c68b4ca89df6c1c24c5b0d7c"}},"92abb539ef6c4fdf87c9e91c83c483b6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b331c1a0bbbe4619865870220314d785","placeholder":"​","style":"IPY_MODEL_24430da42ce14a6f919150fe371bd7b5","value":"Shuffling /root/tensorflow_datasets/goemotions/0.1.0.incomplete1TFGJR/goemotions-train.tfrecord*...:  32%"}},"45c9e00c99654a1f86d3c5b8b015c5b4":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_a63bae70071e43c5aecb3b859ed66485","max":43410,"min":0,"orientation":"horizontal","style":"IPY_MODEL_90bf98c62f014e0883e1bf88fade898f","value":43410}},"df95ea47c13b490a9e720c281c5ead81":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_cbc95b7d03444bdd99f066baa3ae9b00","placeholder":"​","style":"IPY_MODEL_e57969780bde448b942096feb3d72f9a","value":" 14030/43410 [00:00&lt;00:00, 140288.09 examples/s]"}},"eed5db25c68b4ca89df6c1c24c5b0d7c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"b331c1a0bbbe4619865870220314d785":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"24430da42ce14a6f919150fe371bd7b5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a63bae70071e43c5aecb3b859ed66485":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"90bf98c62f014e0883e1bf88fade898f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"cbc95b7d03444bdd99f066baa3ae9b00":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e57969780bde448b942096feb3d72f9a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f5958596c3d34c428dda32759d42f2dc":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_0c9d5b696228456d98365a2887a8405c","IPY_MODEL_4091bd35705840a58722d100ed465915","IPY_MODEL_99b841d048534f179908d304e994caa3"],"layout":"IPY_MODEL_ffbd72844a5b43559e65ea950074f93d"}},"0c9d5b696228456d98365a2887a8405c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ae0caef6ba6d4e75b580b5b2bba835ad","placeholder":"​","style":"IPY_MODEL_d197ae4e768c4509877fc1fc30f49b48","value":"Generating validation examples...:  74%"}},"4091bd35705840a58722d100ed465915":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_1d9484a73f0f4c9586054b069df2a9c4","max":5426,"min":0,"orientation":"horizontal","style":"IPY_MODEL_f0d248c98a304adeaa114beed6b2cdb6","value":5426}},"99b841d048534f179908d304e994caa3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_dffe2a585939456eb73549c332585777","placeholder":"​","style":"IPY_MODEL_8ef19c7facec442797a680d22147154c","value":" 4008/5426 [00:02&lt;00:00, 2013.59 examples/s]"}},"ffbd72844a5b43559e65ea950074f93d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"ae0caef6ba6d4e75b580b5b2bba835ad":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d197ae4e768c4509877fc1fc30f49b48":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1d9484a73f0f4c9586054b069df2a9c4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f0d248c98a304adeaa114beed6b2cdb6":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"dffe2a585939456eb73549c332585777":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8ef19c7facec442797a680d22147154c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a34be115c4d84171af2a4fafcd1fcea0":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_28b49136970140e48e76e01b4a582a70","IPY_MODEL_03dd353a606e4ecfb63a91dd5de4be4b","IPY_MODEL_24697eb4b1644d7e91c403dc1f7ee299"],"layout":"IPY_MODEL_88ef28f82d224822a1dc1c2c37a795b0"}},"28b49136970140e48e76e01b4a582a70":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e19fba3f34d24f8b8c68009d3206a562","placeholder":"​","style":"IPY_MODEL_ff7357aa3036471b975281a8353914ef","value":"Shuffling /root/tensorflow_datasets/goemotions/0.1.0.incomplete1TFGJR/goemotions-validation.tfrecord*...:   0%"}},"03dd353a606e4ecfb63a91dd5de4be4b":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_95238bedf9c647a6863e5d4724c71600","max":5426,"min":0,"orientation":"horizontal","style":"IPY_MODEL_5d84e651904c4084962196d6698e0909","value":5426}},"24697eb4b1644d7e91c403dc1f7ee299":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ffbcfeeaed9d41038f93b34dc7542b76","placeholder":"​","style":"IPY_MODEL_0466d1e571104ce4883e835a23729f6e","value":" 0/5426 [00:00&lt;?, ? examples/s]"}},"88ef28f82d224822a1dc1c2c37a795b0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"e19fba3f34d24f8b8c68009d3206a562":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ff7357aa3036471b975281a8353914ef":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"95238bedf9c647a6863e5d4724c71600":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5d84e651904c4084962196d6698e0909":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"ffbcfeeaed9d41038f93b34dc7542b76":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0466d1e571104ce4883e835a23729f6e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5af3b60e08764e38b2c6e0ab2ab46a0b":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_0af0d04404014545a21d8773d334d745","IPY_MODEL_20201d4be5f646a4833252ee5afd3c0d","IPY_MODEL_abb33c314dfd4b54af5e6fce6de5fb6b"],"layout":"IPY_MODEL_66d81358d2e14cbaa4a901438f2f68bb"}},"0af0d04404014545a21d8773d334d745":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f2fc02c36e394ebda4074d318d9638e8","placeholder":"​","style":"IPY_MODEL_4497ad95fb7c4a92a457229944c05e33","value":"Generating test examples...:  74%"}},"20201d4be5f646a4833252ee5afd3c0d":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_0f75a0f10fad40a9b8074639aab28bac","max":5427,"min":0,"orientation":"horizontal","style":"IPY_MODEL_1a23783d17ee41d79598f848de3f0850","value":5427}},"abb33c314dfd4b54af5e6fce6de5fb6b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_71b12b37680c4c40959df33db7ae25a5","placeholder":"​","style":"IPY_MODEL_299c640813604e1bb3bf4963c01e7bb8","value":" 3989/5427 [00:02&lt;00:00, 1998.55 examples/s]"}},"66d81358d2e14cbaa4a901438f2f68bb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"f2fc02c36e394ebda4074d318d9638e8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4497ad95fb7c4a92a457229944c05e33":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0f75a0f10fad40a9b8074639aab28bac":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1a23783d17ee41d79598f848de3f0850":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"71b12b37680c4c40959df33db7ae25a5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"299c640813604e1bb3bf4963c01e7bb8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"bd546cd4dc6449568540dabcbfbb001b":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_dbc766cdab3d4476a0e994bae000c9bb","IPY_MODEL_e33d4d4e00784e8ba96ab4464d333eb0","IPY_MODEL_899207dca1684d658dc06d9541b00eba"],"layout":"IPY_MODEL_7b759496f91741c9a8f187f9b0cd9a8a"}},"dbc766cdab3d4476a0e994bae000c9bb":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_aa06ccda86844643a3d696dbd4883176","placeholder":"​","style":"IPY_MODEL_78cc058bab46497c9227cfaa28d15328","value":"Shuffling /root/tensorflow_datasets/goemotions/0.1.0.incomplete1TFGJR/goemotions-test.tfrecord*...:   0%"}},"e33d4d4e00784e8ba96ab4464d333eb0":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_974cabb2fac34a0999415f2ccda87474","max":5427,"min":0,"orientation":"horizontal","style":"IPY_MODEL_de21d7f7caac488491948d936a0cfa3c","value":5427}},"899207dca1684d658dc06d9541b00eba":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7a7314ffc7e5452aa9ab41cfd87bb51e","placeholder":"​","style":"IPY_MODEL_b620bad247cc40b88283667a1c3a5a9b","value":" 0/5427 [00:00&lt;?, ? examples/s]"}},"7b759496f91741c9a8f187f9b0cd9a8a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"aa06ccda86844643a3d696dbd4883176":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"78cc058bab46497c9227cfaa28d15328":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"974cabb2fac34a0999415f2ccda87474":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"de21d7f7caac488491948d936a0cfa3c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"7a7314ffc7e5452aa9ab41cfd87bb51e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b620bad247cc40b88283667a1c3a5a9b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}